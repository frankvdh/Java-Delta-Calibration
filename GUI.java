
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.border.TitledBorder;
import jssc.SerialPort;
import jssc.SerialPortException;
import jssc.SerialPortList;

/**
 *
 * @author frank
 */
public class GUI extends javax.swing.JFrame {

    String firmware = "Repetier";
    Delta deltaParams = new Delta(235, 143, 300, 0, 0, 0, 210, 330, 90);
    DeltaCal deltaCal = new DeltaCal();
    DoubleField[][] probes;
    jssc.SerialPort serialPort = null;
    int numPoints, factors;
    int iBedRadius;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        numFactorsActionPerformed(null);
        probePointsStateChanged(null);
        firmwareComboActionPerformed(null);
        endstopX.set(0, 2);
        endstopY.set(0, 2);
        endstopZ.set(0, 2);
        diagRodLen.set(235, 2);
        deltaRadius.set(143, 2);
        homedHeight.set(300, 2);
        towerAngleX.set(210, 0);
        towerAngleY.set(330, 2);
        towerAngleZ.set(90, 0);
        bedRadius.set(90, 0);
        iBedRadius = 90;
        suggestProbePointsBtnActionPerformed(null);
    }

    void setNewParameters(Delta params) {
        newEndstopX.set(params.endstop[0], 2);
        newEndstopY.set(params.endstop[1], 2);
        newEndstopZ.set(params.endstop[2], 2);
        newDiagRodLen.set(params.diagonal, 2);
        newDeltaRadius.set(params.radius, 2);
        newHomedHeight.set(params.homedHeight, 2);
        newTowerAngleX.set(params.towerAngle[0], 2);
        newTowerAngleY.set(params.towerAngle[1], 2);
        newTowerAngleZ.set(params.towerAngle[2], 2);
    }

    void closeSerialPort() {
        if (serialPort != null) {
            portCombo.setSelectedIndex(0);
            gcodePane.setVisible(true);
            homeButton.setVisible(false);
            sendGcodeButton.setVisible(false);
            try {
                serialPort.closePort();
            } catch (SerialPortException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /*
    M205 Print EEPROM
    M360 Report config
    
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parametersPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        probePoints = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        normalise = new javax.swing.JCheckBox();
        firmwareCombo = new javax.swing.JComboBox<>();
        stepsPerMmLabel = new javax.swing.JLabel();
        stepsPerMmField = new javax.swing.JTextField();
        numFactors = new javax.swing.JComboBox<>();
        suggestProbePointsBtn = new javax.swing.JButton();
        endstopX = new DoubleField();
        endstopY = new DoubleField();
        endstopZ = new DoubleField();
        homedHeight = new DoubleField();
        towerAngleX = new DoubleField();
        towerAngleY = new DoubleField();
        towerAngleZ = new DoubleField();
        bedRadius = new DoubleField();
        deltaRadius = new DoubleField();
        jLabel8 = new javax.swing.JLabel();
        diagRodLen = new DoubleField();
        portCombo = new javax.swing.JComboBox<>();
        methodCombo = new javax.swing.JComboBox<>();
        newParameters = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        newDeltaRadiusLabel = new javax.swing.JLabel();
        newTowerZLabel = new javax.swing.JLabel();
        copyButton = new javax.swing.JButton();
        newEndstopX = new DoubleField();
        newEndstopZ = new DoubleField();
        newDeltaRadius = new DoubleField();
        newTowerAngleX = new DoubleField();
        newTowerAngleZ = new DoubleField();
        jLabel42 = new javax.swing.JLabel();
        newHomedHeight = new DoubleField();
        diagRodLenLabel = new javax.swing.JLabel();
        newDiagRodLen = new DoubleField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        newEndstopY = new DoubleField();
        newTowerPositionsLabel = new javax.swing.JLabel();
        newTowerXLabel = new javax.swing.JLabel();
        newTowerYLabel = new javax.swing.JLabel();
        newTowerAngleY = new DoubleField();
        calcButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        commands = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        commandsPane1 = new javax.swing.JScrollPane();
        config = new javax.swing.JTextArea();
        probePointsScroller = new javax.swing.JScrollPane();
        probePointsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        gcodePane = new javax.swing.JScrollPane();
        gcodeTextArea = new javax.swing.JTextArea();
        homeButton = new javax.swing.JButton();
        sendGcodeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        parametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));

        jLabel4.setText("Endstop Corrections");

        jLabel2.setText("X:");

        jLabel3.setText("Y:");

        jLabel11.setText("Z:");

        jLabel5.setText("Delta radius:");

        jLabel6.setText("Homed height:");

        jLabel7.setText("Tower angular positions:");

        jLabel9.setText("X:");

        jLabel10.setText("Y:");

        jLabel14.setText("Z:");

        jLabel15.setText("Printable bed radius:");

        jLabel12.setText("Number of Probe points: ");

        probePoints.setMajorTickSpacing(2);
        probePoints.setMaximum(30);
        probePoints.setMinimum(4);
        probePoints.setMinorTickSpacing(1);
        probePoints.setPaintLabels(true);
        probePoints.setPaintTicks(true);
        probePoints.setSnapToTicks(true);
        probePoints.setValue(4);
        probePoints.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                probePointsStateChanged(evt);
            }
        });

        jLabel13.setText("Number of factors to calibrate:");

        normalise.setText("Normalise endstop correction");

        firmwareCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RepRapFirmware", "Smoothieware", "Repetier", "Marlin (standard)", "Marlin (Rich Cattell)", " " }));
        firmwareCombo.setSelectedIndex(2);
        firmwareCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firmwareComboActionPerformed(evt);
            }
        });

        stepsPerMmLabel.setText("Steps per mm:");

        stepsPerMmField.setText("80");

        numFactors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "6", "7" }));
        numFactors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numFactorsActionPerformed(evt);
            }
        });

        suggestProbePointsBtn.setText("Suggest probe points");
        suggestProbePointsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestProbePointsBtnActionPerformed(evt);
            }
        });

        endstopX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endstopXActionPerformed(evt);
            }
        });

        endstopY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endstopYActionPerformed(evt);
            }
        });

        endstopZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endstopZActionPerformed(evt);
            }
        });

        homedHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homedHeightActionPerformed(evt);
            }
        });

        towerAngleX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                towerAngleXActionPerformed(evt);
            }
        });

        towerAngleY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                towerAngleYActionPerformed(evt);
            }
        });

        towerAngleZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                towerAngleZActionPerformed(evt);
            }
        });

        bedRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedRadiusActionPerformed(evt);
            }
        });

        deltaRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deltaRadiusActionPerformed(evt);
            }
        });

        jLabel8.setText("Diagonal rod length:");

        diagRodLen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagRodLenActionPerformed(evt);
            }
        });

        String[] portnames = SerialPortList.getPortNames();
        String[] comboPortnames = new String[portnames.length+1];
        comboPortnames[0] = "none";
        System.arraycopy(portnames, 0, comboPortnames, 1, portnames.length);
        portCombo.setModel(new javax.swing.DefaultComboBoxModel<>(comboPortnames));
        portCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portComboActionPerformed(evt);
            }
        });

        methodCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "dc42", "Genetic", " " }));

        javax.swing.GroupLayout parametersPanelLayout = new javax.swing.GroupLayout(parametersPanel);
        parametersPanel.setLayout(parametersPanelLayout);
        parametersPanelLayout.setHorizontalGroup(
            parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(parametersPanelLayout.createSequentialGroup()
                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(140, 140, 140)
                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(parametersPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(parametersPanelLayout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(endstopX, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametersPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(deltaRadius, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(homedHeight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel3))
                                    .addGroup(parametersPanelLayout.createSequentialGroup()
                                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(towerAngleX, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(parametersPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(bedRadius, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                                    .addComponent(diagRodLen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(42, 42, 42)
                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(parametersPanelLayout.createSequentialGroup()
                                        .addComponent(endstopY, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11))
                                    .addGroup(parametersPanelLayout.createSequentialGroup()
                                        .addComponent(towerAngleY, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14)))
                                .addGap(18, 18, 18)
                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endstopZ, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(towerAngleZ, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(parametersPanelLayout.createSequentialGroup()
                                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(firmwareCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(162, 162, 162)
                                .addComponent(stepsPerMmLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepsPerMmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(portCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addComponent(methodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel15))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(parametersPanelLayout.createSequentialGroup()
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel13)))
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(normalise)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(suggestProbePointsBtn))
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametersPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(probePoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(parametersPanelLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(numFactors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        parametersPanelLayout.setVerticalGroup(
            parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firmwareCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepsPerMmLabel)
                    .addComponent(stepsPerMmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(methodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(homedHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(endstopX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11)
                    .addComponent(endstopZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endstopY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(deltaRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(towerAngleX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(towerAngleZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(towerAngleY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(diagRodLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(bedRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(probePoints, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(parametersPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(numFactors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(parametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(normalise)
                    .addComponent(suggestProbePointsBtn))
                .addGap(194, 194, 194))
        );

        newParameters.setBorder(javax.swing.BorderFactory.createTitledBorder("New Parameters"));

        jLabel34.setText("Endstop Corrections");

        jLabel37.setText("Z:");

        newDeltaRadiusLabel.setText("Delta radius:");

        newTowerZLabel.setText("Z:");

        copyButton.setText("Copy");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        jLabel42.setText("Homed height:");

        diagRodLenLabel.setText("Diagonal rod length:");

        jLabel35.setText("X:");

        jLabel36.setText("Y:");

        newTowerPositionsLabel.setText("Tower angular positions:");

        newTowerXLabel.setText("X:");

        newTowerYLabel.setText("Y:");

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("GCode commands"));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        commands.setColumns(20);
        commands.setRows(5);
        commands.setBorder(null);
        jScrollPane1.setViewportView(commands);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Result"));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        result.setColumns(20);
        result.setLineWrap(true);
        result.setRows(5);
        result.setBorder(null);
        jScrollPane2.setViewportView(result);

        commandsPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration.h"));
        commandsPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        commandsPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        config.setEditable(false);
        config.setColumns(20);
        config.setLineWrap(true);
        config.setRows(5);
        config.setAutoscrolls(false);
        commandsPane1.setViewportView(config);

        javax.swing.GroupLayout newParametersLayout = new javax.swing.GroupLayout(newParameters);
        newParameters.setLayout(newParametersLayout);
        newParametersLayout.setHorizontalGroup(
            newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newParametersLayout.createSequentialGroup()
                        .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newParametersLayout.createSequentialGroup()
                                .addComponent(newTowerPositionsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTowerXLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(newTowerAngleX, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newDiagRodLen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTowerYLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTowerAngleY, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTowerZLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newTowerAngleZ, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newParametersLayout.createSequentialGroup()
                                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newParametersLayout.createSequentialGroup()
                                            .addComponent(jLabel42)
                                            .addGap(65, 65, 65))
                                        .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(newDeltaRadiusLabel))
                                .addGap(2, 2, 2)
                                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(newHomedHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(newEndstopX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(newDeltaRadius, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEndstopY, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEndstopZ, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(67, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newParametersLayout.createSequentialGroup()
                        .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addGroup(newParametersLayout.createSequentialGroup()
                                .addComponent(calcButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copyButton))
                            .addComponent(diagRodLenLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(commandsPane1)))
        );
        newParametersLayout.setVerticalGroup(
            newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newParametersLayout.createSequentialGroup()
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyButton)
                    .addComponent(calcButton))
                .addGap(18, 18, 18)
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(newHomedHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(newEndstopX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(newEndstopZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(newEndstopY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newDeltaRadiusLabel)
                    .addComponent(newDeltaRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTowerAngleX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newTowerZLabel)
                    .addComponent(newTowerAngleZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newTowerPositionsLabel)
                    .addComponent(newTowerXLabel)
                    .addComponent(newTowerYLabel)
                    .addComponent(newTowerAngleY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diagRodLenLabel)
                    .addComponent(newDiagRodLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commandsPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        probePointsScroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        probePointsScroller.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        probePointsScroller.setAutoscrolls(true);
        probePointsScroller.setHorizontalScrollBar(null);
        probePointsScroller.setMaximumSize(new java.awt.Dimension(500, 100));

        probePointsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Probe Points"));
        probePointsPanel.setAutoscrolls(true);

        jLabel1.setText("X");

        jLabel16.setText("Y");

        jLabel17.setText("Nozzle height error");

        jLabel18.setText("Residual error");

        javax.swing.GroupLayout probePointsPanelLayout = new javax.swing.GroupLayout(probePointsPanel);
        probePointsPanel.setLayout(probePointsPanelLayout);
        probePointsPanelLayout.setHorizontalGroup(
            probePointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(probePointsPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(71, 71, 71)
                .addComponent(jLabel16)
                .addGap(59, 59, 59)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addContainerGap(338, Short.MAX_VALUE))
        );
        probePointsPanelLayout.setVerticalGroup(
            probePointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(probePointsPanelLayout.createSequentialGroup()
                .addGroup(probePointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(0, 275, Short.MAX_VALUE))
        );

        probePointsScroller.setViewportView(probePointsPanel);

        gcodePane.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        gcodePane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        gcodePane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        gcodeTextArea.setColumns(20);
        gcodeTextArea.setRows(5);
        gcodeTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Point"));
        gcodePane.setViewportView(gcodeTextArea);

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        sendGcodeButton.setText("Send Calculated GCode");
        sendGcodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendGcodeButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save to EEPROM");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(parametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(probePointsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(homeButton)
                                .addGap(18, 18, 18)
                                .addComponent(sendGcodeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton))
                            .addComponent(gcodePane, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(parametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(probePointsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(homeButton)
                                    .addComponent(sendGcodeButton)
                                    .addComponent(saveButton))
                                .addGap(62, 62, 62)
                                .addComponent(gcodePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(newParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void suggestProbePointsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestProbePointsBtnActionPerformed
        probes = new DoubleField[numPoints][4];
        Rectangle bounds = probePointsPanel.getBounds();
        bounds.height = numPoints * 25 + 45;
        probePointsPanel.setBounds(bounds);
        probePointsPanel.setPreferredSize(new Dimension(bounds.width, bounds.height));
        probePointsPanel.removeAll();
        probePointsPanel.add(jLabel1);
        probePointsPanel.add(jLabel16);
        probePointsPanel.add(jLabel17);
        probePointsPanel.add(jLabel18);
        for (int i = 0; i < numPoints; i++) {
            probes[i][0] = new DoubleField(0, 2);
            probes[i][0].setBounds(jLabel1.getBounds().x, i * 25 + 45, 65, 22);
            probes[i][1] = new DoubleField(0, 2);
            probes[i][1].setBounds(jLabel16.getBounds().x, i * 25 + 45, 65, 22);
            probes[i][2] = new DoubleField(0, 2);
            probes[i][2].setBounds(jLabel17.getBounds().x, i * 25 + 45, 65, 22);
            probes[i][3] = new DoubleField(0, 2);
            probes[i][3].setBounds(jLabel18.getBounds().x, i * 25 + 45, 65, 22);
            if (i == 0) {
                probes[i][0].set(0, 2);
                probes[i][1].set(0, 2);
            } else {
                probes[i][1].set(iBedRadius * Math.sin(2 * Math.PI * (i - 1) / (numPoints - 1) + Math.PI / 2), 2);
                probes[i][0].set(iBedRadius * Math.cos(2 * Math.PI * (i - 1) / (numPoints - 1) + Math.PI / 2), 2);
            }
            probePointsPanel.add(probes[i][0]);
            probePointsPanel.add(probes[i][1]);
            probePointsPanel.add(probes[i][2]);
            probePointsPanel.add(probes[i][3]);
            JButton gcodeButton = new JButton((serialPort == null ? "View" : "Send") + " Gcode");
            gcodeButton.setBounds(jLabel18.getBounds().x + jLabel18.getBounds().width + 10, i * 25 + 45, 100, 22);
            final int x = i;
            gcodeButton.addActionListener((java.awt.event.ActionEvent evt1) -> {
                gcodeButtonActionPerformed(x, evt1);
            });
            probePointsPanel.add(gcodeButton);
        }
        if (deltaCal.debug) {
            probes[0][2].set(0, 2);
            probes[1][2].set(0.72, 2);
            probes[2][2].set(-0.22, 2);
            if (numPoints > 3) {
                probes[3][2].set(0.30, 2);
            }
            if (numPoints > 4) {
                probes[4][2].set(0.35, 2);
            }
            if (numPoints > 5) {
                probes[5][2].set(1.9, 2);
            }
            if (numPoints > 6) {
                probes[6][2].set(3.2, 2);
            }
        }
        probePointsPanel.repaint();
        probePointsScroller.repaint();
    }//GEN-LAST:event_suggestProbePointsBtnActionPerformed
    
    private void gcodeButtonActionPerformed(int i, java.awt.event.ActionEvent evt) {
        // Lift dial indicator clear of the bed, move to new position, lower slowly to the bed
        String gcode = "G0 Z10 F1500\nG0 X" + fixed(probes[i][0].get(), 2) + " Y" + fixed(probes[i][1].get(), 2) + "\nG0 Z0 F30\n";
        if (serialPort == null) {
            ((TitledBorder) gcodeTextArea.getBorder()).setTitle("Point " + i);
            gcodeTextArea.setText(gcode);
        } else {
            try {
                serialPort.writeString(gcode);
            } catch (SerialPortException ex) {
                closeSerialPort();
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void calcGenetic() {
        if (Gene.thread.isAlive()) {
            Gene.thread.interrupt();
            deltaParams = Gene.getResults();
            if (Gene.result.startsWith("S")) {
                ((TitledBorder) jScrollPane2.getBorder()).setTitle("Success!");
                result.setText(Gene.result.substring(1));
                result.setBackground(Color.GREEN);
                setNewParameters(deltaParams);
                generateCommands(deltaParams);
                copyButton.setEnabled(true);
            } else {
                ((TitledBorder) jScrollPane2.getBorder()).setTitle("Error!");
                result.setText(Gene.result.substring(1));
                result.setBackground(Color.PINK);
                jScrollPane2.repaint();
                copyButton.setEnabled(false);

            }
        } else {
            Gene.thread.start();

        }
    }

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        try {
            deltaParams.homedHeight = homedHeight.get();
            iBedRadius = (int) bedRadius.get();
            deltaParams.diagonal = diagRodLen.get();

            deltaParams.endstop[0] = endstopX.get();
            deltaParams.endstop[1] = endstopY.get();
            deltaParams.endstop[2] = endstopZ.get();
            deltaParams.radius = deltaRadius.get();
            deltaParams.towerAngle[0] = towerAngleX.get();
            deltaParams.towerAngle[1] = towerAngleY.get();
            deltaParams.towerAngle[2] = towerAngleZ.get();
            deltaParams.recalc();
            String rslt = "EWorking";
            if (methodCombo.getItemAt(methodCombo.getSelectedIndex()).equals("dc42")) {
                rslt = deltaCal.dc42Calculations(deltaParams, numPoints, factors, probes, firmware, normalise.isSelected());
            } else if (methodCombo.getItemAt(methodCombo.getSelectedIndex()).equals("Genetic")) {
                calcGenetic();
            }
            if (rslt.startsWith("S")) {
                ((TitledBorder) jScrollPane2.getBorder()).setTitle("Success!");
                result.setText(rslt.substring(1));
                result.setBackground(Color.GREEN);
                setNewParameters(deltaParams);
                generateCommands(deltaParams);
                copyButton.setEnabled(true);
            } else {
                ((TitledBorder) jScrollPane2.getBorder()).setTitle("Error!");
                result.setText(rslt.substring(1));
                result.setBackground(Color.PINK);
                jScrollPane2.repaint();
                copyButton.setEnabled(false);

            }

        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_calcButtonActionPerformed

    // See http://reprap.org/wiki/G-code#M665:_Set_delta_configuration
    //     http://reprap.org/wiki/G-code#M666:_Set_delta_endstop_adjustment
    // In RepRapFirmware and Repetier, positive endstop adjustments move the 
    // head closer to the bed when it is near the corresponding tower. 
    // In Marlin and Smoothieware, negative endstop corrections move the head 
    // closer to the bed when it is near the corresponding tower.
    // In Marlin, only negative endstop corrections are allowed. From version 
    // 1.1.0 onward positive endstops are allowed to be entered but the endstops 
    // will be normalized to zero or negative and the residue will be subtracted
    // from the delta height defined in M665.
    // In Repetier the endstop corrections are expressed in motor steps. 
    // In other firmwares they are expressed in mm. 
    void generateCommands(Delta params) {
        String gCode = "";
        String configLines = "";
        String m665 = "M665 R" + fixed(params.radius, 2) + " L" + fixed(params.diagonal, 2);
        switch (firmware) {
            case "RepRapFirmware":
                gCode = m665 + " H" + fixed(params.homedHeight, 2) + " B" + iBedRadius
                        + " X" + fixed(params.towerAngle[0], 2) + " Y" + fixed(params.towerAngle[1], 2) + " Z" + fixed(params.towerAngle[2], 2) + "\n"
                        + "M666 X" + fixed(params.endstop[0], 2) + " Y" + fixed(params.endstop[1], 2) + " Z" + fixed(params.endstop[2], 2);
                break;
            case "Marlin (standard)":
                gCode = "M666 X" + fixed(-params.endstop[0], 2) + " Y" + fixed(-params.endstop[1], 2) + " Z" + fixed(-params.endstop[2], 2);
                configLines = "Set homed height " + fixed(params.homedHeight, 2) + "mm in config.h";
                break;
            case "Marlin (Rich Cattell)":
                gCode = "M666 X" + fixed(-params.endstop[0], 2) + " Y" + fixed(-params.endstop[1], 2) + " Z" + fixed(-params.endstop[2], 2)
                        + " R" + fixed(params.radius, 2) + " D" + fixed(params.diagonal, 2) + " H" + fixed(params.homedHeight, 2)
                        + " A" + fixed(params.towerAngle[0], 2) + " B" + fixed(params.towerAngle[1], 2) + " C" + fixed(params.towerAngle[2], 2);
                break;
            case "Repetier":
                int stepsPerMm = Integer.parseInt(stepsPerMmField.getText());
                gCode = "M666 X" + Math.round(params.endstop[1] * stepsPerMm)
                        + " Y" + Math.round(params.endstop[2] * stepsPerMm)
                        + " Z" + Math.round(params.endstop[0] * stepsPerMm);
                configLines = "#define DELTA_DIAGONAL_ROD " + fixed(params.diagonal, 2) + " // mm\n"
                        + "#define ROD_RADIUS " + fixed(params.radius, 2) + " // mm\n"
                        + "#define DELTA_ALPHA_A " + fixed(params.towerAngle[0], 1) + " // deg\n"
                        + "#define DELTA_ALPHA_B " + fixed(params.towerAngle[1], 1) + " // deg\n"
                        + "#define DELTA_ALPHA_C " + fixed(params.towerAngle[2], 1) + " // deg\n";
                break;
            case "Smoothieware":
                gCode = m665 + " D" + fixed(params.towerAngle[0], 2) + " E" + fixed(params.towerAngle[1], 2) + " H" + fixed(params.towerAngle[2], 2) + " Z" + fixed(params.homedHeight, 2) + "\n"
                        + "M666 X" + fixed(-params.endstop[0], 2) + " Y" + fixed(-params.endstop[1], 2) + " Z" + fixed(-params.endstop[2], 2);
                break;
        }
        commands.setText(gCode);
        config.setText(configLines);
    }

    static String fixed(double n, int dp) {
        return String.format("%." + dp + 'f', n);
    }


  private void firmwareComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firmwareComboActionPerformed
      boolean repetier = (firmware = firmwareCombo.getItemAt(firmwareCombo.getSelectedIndex())).equals("Repetier");
      stepsPerMmField.setVisible(repetier);
      stepsPerMmLabel.setVisible(repetier);
  }//GEN-LAST:event_firmwareComboActionPerformed

  private void probePointsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_probePointsStateChanged
      numPoints = probePoints.getValue();
      suggestProbePointsBtnActionPerformed(null);
  }//GEN-LAST:event_probePointsStateChanged

  private void numFactorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numFactorsActionPerformed
      // Will always be a valid integer
      factors = Integer.parseInt(numFactors.getItemAt(numFactors.getSelectedIndex()));
      // Must always have at least as many points as there are factors
      probePoints.setMinimum(factors);

      // Only show results that are calculated
      newDeltaRadiusLabel.setVisible(factors > 3);
      newDeltaRadius.setVisible(factors > 3);

      newTowerPositionsLabel.setVisible(factors > 4);
      newTowerXLabel.setVisible(factors > 4);
      newTowerYLabel.setVisible(factors > 4);
      newTowerZLabel.setVisible(factors > 4);
      newTowerAngleX.setVisible(factors > 4);
      newTowerAngleY.setVisible(factors > 4);
      newTowerAngleZ.setVisible(factors > 4);

      diagRodLenLabel.setVisible(factors > 6);
      newDiagRodLen.setVisible(factors > 6);
  }//GEN-LAST:event_numFactorsActionPerformed

  private void diagRodLenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagRodLenActionPerformed
      deltaParams.diagonal = diagRodLen.get();
  }//GEN-LAST:event_diagRodLenActionPerformed

  private void endstopXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endstopXActionPerformed
      deltaParams.endstop[1] = endstopX.get();
  }//GEN-LAST:event_endstopXActionPerformed

  private void endstopYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endstopYActionPerformed
      deltaParams.endstop[2] = endstopY.get();
  }//GEN-LAST:event_endstopYActionPerformed

  private void endstopZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endstopZActionPerformed
      deltaParams.endstop[0] = endstopZ.get();
  }//GEN-LAST:event_endstopZActionPerformed

  private void deltaRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deltaRadiusActionPerformed
      deltaParams.radius = deltaRadius.get();
  }//GEN-LAST:event_deltaRadiusActionPerformed

  private void homedHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homedHeightActionPerformed
      deltaParams.homedHeight = homedHeight.get();
  }//GEN-LAST:event_homedHeightActionPerformed

  private void towerAngleXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_towerAngleXActionPerformed
      deltaParams.towerAngle[0] = towerAngleX.get();
  }//GEN-LAST:event_towerAngleXActionPerformed

  private void towerAngleYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_towerAngleYActionPerformed
      deltaParams.towerAngle[1] = towerAngleY.get();
  }//GEN-LAST:event_towerAngleYActionPerformed

  private void towerAngleZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_towerAngleZActionPerformed
      deltaParams.towerAngle[2] = towerAngleZ.get();
  }//GEN-LAST:event_towerAngleZActionPerformed

  private void bedRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedRadiusActionPerformed
      iBedRadius = (int) bedRadius.get();
  }//GEN-LAST:event_bedRadiusActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        endstopX.set(newEndstopX.get(), 2);
        endstopY.set(newEndstopY.get(), 2);
        endstopZ.set(newEndstopZ.get(), 2);
        diagRodLen.set(newDiagRodLen.get(), 2);
        deltaRadius.set(newDeltaRadius.get(), 2);
        homedHeight.set(newHomedHeight.get(), 2);
        towerAngleX.set(newTowerAngleX.get(), 2);
        towerAngleY.set(newTowerAngleY.get(), 2);
        towerAngleZ.set(newTowerAngleZ.get(), 2);

    }//GEN-LAST:event_copyButtonActionPerformed

  private void portComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portComboActionPerformed
      closeSerialPort();
      String name = portCombo.getItemAt(portCombo.getSelectedIndex());
      if (name.equals("none")) {
          gcodePane.setVisible(true);
          homeButton.setVisible(false);
          sendGcodeButton.setVisible(false);
          return;
      }
      serialPort = new SerialPort(name);
      try {
          serialPort.openPort();//Open serial port
          serialPort.setParams(SerialPort.BAUDRATE_115200, SerialPort.DATABITS_8, SerialPort.STOPBITS_1,
                  SerialPort.PARITY_NONE);
          gcodePane.setVisible(false);
          homeButton.setVisible(true);
          sendGcodeButton.setVisible(true);
      } catch (SerialPortException ex) {
          closeSerialPort();
          System.out.println(ex);
      }
  }//GEN-LAST:event_portComboActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        try {
            serialPort.writeString("G28\n");
        } catch (SerialPortException ex) {
            closeSerialPort();
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeButtonActionPerformed

    private void sendGcodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendGcodeButtonActionPerformed
        try {
            serialPort.writeString(commands.getText());
        } catch (SerialPortException ex) {
            closeSerialPort();
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendGcodeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            serialPort.writeString("M500\n");
        } catch (SerialPortException ex) {
            closeSerialPort();
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DoubleField bedRadius;
    public static javax.swing.JButton calcButton;
    private javax.swing.JTextArea commands;
    private javax.swing.JScrollPane commandsPane1;
    public static javax.swing.JTextArea config;
    public static javax.swing.JButton copyButton;
    private DoubleField deltaRadius;
    public DoubleField diagRodLen;
    private javax.swing.JLabel diagRodLenLabel;
    private DoubleField endstopX;
    private DoubleField endstopY;
    private DoubleField endstopZ;
    public static javax.swing.JComboBox<String> firmwareCombo;
    private javax.swing.JScrollPane gcodePane;
    private javax.swing.JTextArea gcodeTextArea;
    private javax.swing.JButton homeButton;
    private DoubleField homedHeight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> methodCombo;
    private DoubleField newDeltaRadius;
    private javax.swing.JLabel newDeltaRadiusLabel;
    public DoubleField newDiagRodLen;
    private DoubleField newEndstopX;
    private DoubleField newEndstopY;
    private DoubleField newEndstopZ;
    private DoubleField newHomedHeight;
    public static javax.swing.JPanel newParameters;
    private DoubleField newTowerAngleX;
    private DoubleField newTowerAngleY;
    private DoubleField newTowerAngleZ;
    private javax.swing.JLabel newTowerPositionsLabel;
    private javax.swing.JLabel newTowerXLabel;
    private javax.swing.JLabel newTowerYLabel;
    private javax.swing.JLabel newTowerZLabel;
    public static javax.swing.JCheckBox normalise;
    public static javax.swing.JComboBox<String> numFactors;
    private javax.swing.JPanel parametersPanel;
    private javax.swing.JComboBox<String> portCombo;
    public static javax.swing.JSlider probePoints;
    public static javax.swing.JPanel probePointsPanel;
    private javax.swing.JScrollPane probePointsScroller;
    private javax.swing.JTextArea result;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton sendGcodeButton;
    public static javax.swing.JTextField stepsPerMmField;
    private javax.swing.JLabel stepsPerMmLabel;
    public static javax.swing.JButton suggestProbePointsBtn;
    private DoubleField towerAngleX;
    private DoubleField towerAngleY;
    private DoubleField towerAngleZ;
    // End of variables declaration//GEN-END:variables
}
